# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.31.1-standalone/namespace-v1.json
apiVersion: v1
kind: Namespace
metadata:
  name: moo
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.31.1-standalone/serviceaccount-v1.json
apiVersion: v1
kind: ServiceAccount
metadata:
  name: moo
  namespace: moo
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.31.1-standalone/rolebinding-rbac-v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: moo
  name: moo
roleRef:
  apiGroup: rbac.authorization.k8s.io 
  kind: Role
  name: moo
subjects:
  - namespace: moo
    name: moo
    kind: ServiceAccount
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.31.1-standalone/role-rbac-v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: moo
  namespace: moo
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs: &writeverbs
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs: *writeverbs
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.31.1-standalone/deployment-apps-v1.json
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moo
  namespace: moo
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: moo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: moo
    spec:
      containers:
        - env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: k8s.container.name=moo,service.instance.id=$(POD_UID),k8s.namespace.name=$(POD_NAMESPACE),k8s.pod.name=$(POD_NAME),k8s.pod.uid=$(POD_UID),k8s.node.name=$(NODE_NAME)
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://otelcol.opentelemetry.svc:4317
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/workload-identity/creds.json
          image: ko://go.seankhliao.com/mono/cmd/moo
          args:
            - -config-bucket=file:///etc/moo
          name: moo
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8081
              name: debug
          volumeMounts:
            - name: token
              mountPath: /var/run/service-account
              readOnly: true
            - name: gcp-creds
              mountPath: /etc/workload-identity
              readOnly: true
            - name: config
              mountPath: /etc/moo
      enableServiceLinks: false
      serviceAccountName: moo
      volumes:
        - name: token
          projected:
            sources:
              - serviceAccountToken:
                  audience: https://iam.googleapis.com/projects/330311169810/locations/global/workloadIdentityPools/kubernetes/providers/justia-asami
                  expirationSeconds: 3600
                  path: token
        - name: gcp-creds
          configMap:
            name: gcp
        - name: config
          secret:
            secretName: moo
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.31.1-standalone/configmap-v1.json
apiVersion: v1
kind: ConfigMap
metadata:
  name: gcp
  namespace: moo
data:
  creds.json: |
    {
      "universe_domain": "googleapis.com",
      "type": "external_account",
      "audience": "//iam.googleapis.com/projects/330311169810/locations/global/workloadIdentityPools/kubernetes/providers/justia-asami",
      "subject_token_type": "urn:ietf:params:oauth:token-type:jwt",
      "token_url": "https://sts.googleapis.com/v1/token",
      "credential_source": {
        "file": "/var/run/service-account/token",
        "format": {
          "type": "text"
        }
      },
      "token_info_url": "https://sts.googleapis.com/v1/introspect"
    }
