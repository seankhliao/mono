// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: earbug/v5/query.proto

package earbugv5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryFilterContext struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Track         *string                `protobuf:"bytes,1,opt,name=track"`
	xxx_hidden_Artists       []string               `protobuf:"bytes,2,rep,name=artists"`
	xxx_hidden_PlayTime      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=play_time,json=playTime"`
	xxx_hidden_TrackDuration *durationpb.Duration   `protobuf:"bytes,4,opt,name=track_duration,json=trackDuration"`
	xxx_hidden_Plays         int64                  `protobuf:"varint,5,opt,name=plays"`
	xxx_hidden_Artist        *string                `protobuf:"bytes,6,opt,name=artist"`
	xxx_hidden_Tracks        int64                  `protobuf:"varint,7,opt,name=tracks"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *QueryFilterContext) Reset() {
	*x = QueryFilterContext{}
	mi := &file_earbug_v5_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFilterContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFilterContext) ProtoMessage() {}

func (x *QueryFilterContext) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v5_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryFilterContext) GetTrack() string {
	if x != nil {
		if x.xxx_hidden_Track != nil {
			return *x.xxx_hidden_Track
		}
		return ""
	}
	return ""
}

func (x *QueryFilterContext) GetArtists() []string {
	if x != nil {
		return x.xxx_hidden_Artists
	}
	return nil
}

func (x *QueryFilterContext) GetPlayTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_PlayTime
	}
	return nil
}

func (x *QueryFilterContext) GetTrackDuration() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_TrackDuration
	}
	return nil
}

func (x *QueryFilterContext) GetPlays() int64 {
	if x != nil {
		return x.xxx_hidden_Plays
	}
	return 0
}

func (x *QueryFilterContext) GetArtist() string {
	if x != nil {
		if x.xxx_hidden_Artist != nil {
			return *x.xxx_hidden_Artist
		}
		return ""
	}
	return ""
}

func (x *QueryFilterContext) GetTracks() int64 {
	if x != nil {
		return x.xxx_hidden_Tracks
	}
	return 0
}

func (x *QueryFilterContext) SetTrack(v string) {
	x.xxx_hidden_Track = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *QueryFilterContext) SetArtists(v []string) {
	x.xxx_hidden_Artists = v
}

func (x *QueryFilterContext) SetPlayTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_PlayTime = v
}

func (x *QueryFilterContext) SetTrackDuration(v *durationpb.Duration) {
	x.xxx_hidden_TrackDuration = v
}

func (x *QueryFilterContext) SetPlays(v int64) {
	x.xxx_hidden_Plays = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *QueryFilterContext) SetArtist(v string) {
	x.xxx_hidden_Artist = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *QueryFilterContext) SetTracks(v int64) {
	x.xxx_hidden_Tracks = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *QueryFilterContext) HasTrack() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QueryFilterContext) HasPlayTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PlayTime != nil
}

func (x *QueryFilterContext) HasTrackDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TrackDuration != nil
}

func (x *QueryFilterContext) HasPlays() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *QueryFilterContext) HasArtist() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *QueryFilterContext) HasTracks() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *QueryFilterContext) ClearTrack() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Track = nil
}

func (x *QueryFilterContext) ClearPlayTime() {
	x.xxx_hidden_PlayTime = nil
}

func (x *QueryFilterContext) ClearTrackDuration() {
	x.xxx_hidden_TrackDuration = nil
}

func (x *QueryFilterContext) ClearPlays() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Plays = 0
}

func (x *QueryFilterContext) ClearArtist() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Artist = nil
}

func (x *QueryFilterContext) ClearTracks() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Tracks = 0
}

type QueryFilterContext_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// by playback or track
	Track   *string
	Artists []string
	// by playback
	PlayTime *timestamppb.Timestamp
	// by playback or track
	TrackDuration *durationpb.Duration
	// by track or artist
	Plays *int64
	// by artist
	Artist *string
	Tracks *int64
}

func (b0 QueryFilterContext_builder) Build() *QueryFilterContext {
	m0 := &QueryFilterContext{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Track != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Track = b.Track
	}
	x.xxx_hidden_Artists = b.Artists
	x.xxx_hidden_PlayTime = b.PlayTime
	x.xxx_hidden_TrackDuration = b.TrackDuration
	if b.Plays != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Plays = *b.Plays
	}
	if b.Artist != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Artist = b.Artist
	}
	if b.Tracks != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Tracks = *b.Tracks
	}
	return m0
}

var File_earbug_v5_query_proto protoreflect.FileDescriptor

const file_earbug_v5_query_proto_rawDesc = "" +
	"\n" +
	"\x15earbug/v5/query.proto\x12\tearbug.v5\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x85\x02\n" +
	"\x12QueryFilterContext\x12\x14\n" +
	"\x05track\x18\x01 \x01(\tR\x05track\x12\x18\n" +
	"\aartists\x18\x02 \x03(\tR\aartists\x127\n" +
	"\tplay_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bplayTime\x12@\n" +
	"\x0etrack_duration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\rtrackDuration\x12\x14\n" +
	"\x05plays\x18\x05 \x01(\x03R\x05plays\x12\x16\n" +
	"\x06artist\x18\x06 \x01(\tR\x06artist\x12\x16\n" +
	"\x06tracks\x18\a \x01(\x03R\x06tracksB\x8b\x01\n" +
	"\rcom.earbug.v5B\n" +
	"QueryProtoP\x01Z)go.seankhliao.com/mono/earbug/v5;earbugv5\xa2\x02\x03EXX\xaa\x02\tEarbug.V5\xca\x02\tEarbug\\V5\xe2\x02\x15Earbug\\V5\\GPBMetadata\xea\x02\n" +
	"Earbug::V5b\beditionsp\xe8\a"

var file_earbug_v5_query_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_earbug_v5_query_proto_goTypes = []any{
	(*QueryFilterContext)(nil),    // 0: earbug.v5.QueryFilterContext
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 2: google.protobuf.Duration
}
var file_earbug_v5_query_proto_depIdxs = []int32{
	1, // 0: earbug.v5.QueryFilterContext.play_time:type_name -> google.protobuf.Timestamp
	2, // 1: earbug.v5.QueryFilterContext.track_duration:type_name -> google.protobuf.Duration
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_earbug_v5_query_proto_init() }
func file_earbug_v5_query_proto_init() {
	if File_earbug_v5_query_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_earbug_v5_query_proto_rawDesc), len(file_earbug_v5_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_earbug_v5_query_proto_goTypes,
		DependencyIndexes: file_earbug_v5_query_proto_depIdxs,
		MessageInfos:      file_earbug_v5_query_proto_msgTypes,
	}.Build()
	File_earbug_v5_query_proto = out.File
	file_earbug_v5_query_proto_goTypes = nil
	file_earbug_v5_query_proto_depIdxs = nil
}
