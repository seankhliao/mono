// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/envoyproxy/gateway/api/v1alpha1

package v1alpha1

import (
	gwapiv1a2 "sigs.k8s.io/gateway-api/apis/v1alpha2"
	"sigs.k8s.io/gateway-api/apis/v1"
)

#PolicyTargetReferences: {
	// TargetRef is the name of the resource this policy is being attached to.
	// This policy and the TargetRef MUST be in the same namespace for this
	// Policy to have effect
	//
	// Deprecated: use targetRefs/targetSelectors instead
	targetRef?: null | gwapiv1a2.#LocalPolicyTargetReferenceWithSectionName @go(TargetRef,*gwapiv1a2.LocalPolicyTargetReferenceWithSectionName)

	// TargetRefs are the names of the Gateway resources this policy
	// is being attached to.
	targetRefs?: [...gwapiv1a2.#LocalPolicyTargetReferenceWithSectionName] @go(TargetRefs,[]gwapiv1a2.LocalPolicyTargetReferenceWithSectionName)

	// TargetSelectors allow targeting resources for this policy based on labels
	targetSelectors?: [...#TargetSelector] @go(TargetSelectors,[]TargetSelector)
}

// +kubebuilder:validation:XValidation:rule="has(self.group) ? self.group == 'gateway.networking.k8s.io' : true ", message="group must be gateway.networking.k8s.io"
#TargetSelector: {
	// Group is the group that this selector targets. Defaults to gateway.networking.k8s.io
	//
	// +kubebuilder:default:="gateway.networking.k8s.io"
	group?: null | v1.#Group @go(Group,*sigs.k8s.io/gateway-api/apis/v1.Group)

	// Kind is the resource kind that this selector targets.
	kind: v1.#Kind @go(Kind,sigs.k8s.io/gateway-api/apis/v1.Kind)

	// MatchLabels are the set of label selectors for identifying the targeted resource
	matchLabels: {[string]: string} @go(MatchLabels,map[string]string)
}
